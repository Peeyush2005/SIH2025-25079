# Azure DevOps Pipeline for Broken Conductor Detection App
# This pipeline will build and deploy the app to Azure App Service

trigger:
  branches:
    include:
      - main
      - master

variables:
  azureSubscription: 'your-azure-subscription-connection'
  webAppName: 'broken-conductor-detection'
  resourceGroup: 'bcf-detection-rg'
  pythonVersion: '3.9'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      workingDirectory: $(System.DefaultWorkingDirectory)
      displayName: 'Install dependencies'
    
    - script: |
        source antenv/bin/activate
        python bcf_detecter.py
      workingDirectory: $(System.DefaultWorkingDirectory)
      displayName: 'Test BCF Detection Script'
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              runtimeStack: 'PYTHON|3.9'
              startUpCommand: 'gunicorn --bind=0.0.0.0 --timeout 600 app:app'